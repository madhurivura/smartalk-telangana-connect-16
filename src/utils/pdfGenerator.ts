
import jsPDF from 'jspdf';

interface PDFContent {
  title: string;
  description?: string;
  steps?: { title: string; description: string }[];
  documents?: string[];
  process?: string[];
  office?: string;
  timeframe?: string;
  fees?: string;
  purpose?: string;
}

export const generatePDF = (content: PDFContent, filename: string) => {
  const doc = new jsPDF();
  let yPosition = 20;
  const pageHeight = doc.internal.pageSize.height;
  const margin = 20;

  // Helper function to add text with word wrapping
  const addText = (text: string, fontSize: number = 12, isBold: boolean = false) => {
    doc.setFontSize(fontSize);
    if (isBold) {
      doc.setFont(undefined, 'bold');
    } else {
      doc.setFont(undefined, 'normal');
    }
    
    const lines = doc.splitTextToSize(text, 170);
    
    // Check if we need a new page
    if (yPosition + (lines.length * fontSize * 0.5) > pageHeight - margin) {
      doc.addPage();
      yPosition = margin;
    }
    
    doc.text(lines, margin, yPosition);
    yPosition += lines.length * fontSize * 0.5 + 5;
  };

  // Title
  addText(content.title, 18, true);
  yPosition += 5;
  
  // Description
  if (content.description) {
    addText('Description:', 14, true);
    addText(content.description, 12);
    yPosition += 5;
  }
  
  // Purpose
  if (content.purpose) {
    addText('Purpose:', 14, true);
    addText(content.purpose, 12);
    yPosition += 5;
  }

  // Required Documents
  if (content.documents && content.documents.length > 0) {
    addText('Required Documents:', 14, true);
    content.documents.forEach((document, index) => {
      addText(`${index + 1}. ${document}`, 12);
    });
    yPosition += 5;
  }

  // Process Steps
  if (content.process && content.process.length > 0) {
    addText('Process Steps:', 14, true);
    content.process.forEach((step, index) => {
      addText(`${index + 1}. ${step}`, 12);
    });
    yPosition += 5;
  }

  // Detailed Steps
  if (content.steps && content.steps.length > 0) {
    addText('Detailed Steps:', 14, true);
    content.steps.forEach((step, index) => {
      addText(`${index + 1}. ${step.title}`, 12, true);
      addText(`   ${step.description}`, 12);
    });
    yPosition += 5;
  }

  // Additional Information
  if (content.office) {
    addText(`Office: ${content.office}`, 12);
  }

  if (content.timeframe) {
    addText(`Time Required: ${content.timeframe}`, 12);
  }

  if (content.fees) {
    addText(`Fees: ${content.fees}`, 12);
  }

  // Footer
  yPosition += 10;
  addText('Generated by SmartTalk Telangana', 10);

  // Save the PDF
  doc.save(filename);
};
